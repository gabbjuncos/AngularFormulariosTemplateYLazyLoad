history -c command

git config --global user.name "Tu nombre"
git config --global user.email "Tu correo"

para cerrar sesion
git config --global --unset user.email "colocar email"

git config --global --list

ir a la carpeta donde esta el .json con los datos para levantar el server local

json-server --watch db.json

________________________

CREAR NUEVO PROYECTO
ng new formulariosApp

se va a utilizar bootstrap porque usar angular prime ng agrega una capa de complegidad que no pinta hacerlo 
para este ejercicio

y para agregar el bootstrap al proyecto se agrega 	
<link href=https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css
en el index html


se puede generar de forma automatica cuando se crea el proyecto el tema del archivo app-routing.module.ts
que importa El Routes y las exporta para que los demas modulos lo puedan utilizar
y en el app-moudule se lo importa para utilizarlo

se crea un modulo para shared y se crea su caperta por defecto, este modulo va tener componentes que se van a compartir
con la aplicacion

ng g m shared

se crea tambien en componente para el menu latearl dentro de la carpeta shared, si el archivo test ni del estilo
ng g c shared/sidemenu --skipTests -is

y se lo importa a este modulo en el app.module

y en el modulo de shared
hay que exportar componente sideMenuComponet
para que sea publico y se lo pueda llamar de otro lado


para que lo podamos ver desde el app.component.html

en el body  de index.html se llama la clase container de bootstrap, agrega un espacio a la izquierda

en el app componente 
se crea un div y se ponen la clase row mt-5 para dejar un margen con la parte de arriba
y para separa por columnas de a 4 con la clase col-4

se crea un espacio donde voy a estar cambiando las rutas
clas col para que tome todo el espacio restante
y se coloca el componente router-outlet
para renderizar las respectivas rutas

se puede ver todas las banderas de algular cli para crear cosas o
dicho de otra forma comandos, desde la terminar de visual code
ng g m --help

para generar un modulo para routing de forma autmotaica creado en la carpeta template

ng g m template --routing

y nos crea 2 archivos 
el template.module.ts
y el template-routing.module.ts


el template module ts importa el './template-routing.module'
el otro archivo que se creo

se crea otro igual pero para los reactive

ng g m reactive --routing

en template se crean los formularios creados por aproximacion por template
y en la carpeta reactive todo los relacionado a los formularios reactivos

______________

se crea el componentes basicos en reactive

ng g c reactive/basicos --skipTest -is

actualiza el reactive module y ademas no crea los archivos css y de pruebas spec

tambien se crea otro componentes para dinamicos y para switches
ng g c reactive/dinamicos
ng g c reactive/switches
en switches vamos a tener radios, botones, lo que se maneja en los formularios

se definen las rutas para estos componentes, en el reactive-routing.module
en la const routes se definen
se coloca la url como quiero que salga y el componente asociado
luego para la ruta que sea cualquiercosa que hago referencia a eso con **
hago que redirecciones con redirectTo a la pagina basicos
porque si pongo '' caeria a la lista


se crean los mismo componentes para el componente TEMPLATE

ng g c template/basicos
ng g c template/dinamicos
ng g c template/switches

en template-routing.module.ts en la propiedad Routes se definen las path
se define en string el nombre del path y al nombre del componente al que quiero asociar
para mostrar 
al basicos que asocio es para los templates

y cualquier otro path me deberia redireccionar a basicos
{ path:'**', redirectTo: 'basicos'},

implementar lazy load
desde el routing module general

para el lazy load de  template
llamo al loadChuildren y se importa el modulo correspondiente
template.module
y luego que se resuelve eso le digo que devuelva el template Module

_________________

SIDE MENU

sidemenu.component.html

al ponerle active en la clase, se para que se pinte de azul la opcion activa de la
ruta en la que me encuentre

y le ponemos el routerLink asociada a la url para que cambie de path al hacerle click

hasta el momento no funciona
hay que importarlo desde el shared.module
se importa en el routerModule

en el sidemenu.ts.component crea una interface para el Menu

la interface va a tener un texto y una ruta a la que se quiere navegar
tambien podria ponerse en otro archivo esta interfaz

y se lo define para definir el texto a mostrar y la url correspondiente para
dirigir

las rutas que se ponen aca tienen que hacer macht con las turas que tengo
definidas en el app routing module

y con un ng form se puede crear ahora de una manera mas facil las opciones del menu

se agrega  routerLinkActive="active" para que se pinte de azul la opcion marcada

y se hace lo mismo para las opciones del menu de la otra pagina Reactive

y se agrega a la clase un mt-3 , separacion con lo de arriba 3

_____________________________

TEMPLATE DISEÃ‘O DEL FORMULARIO

formulario por template se le dice a angular que maneje todo el formulario de 
manera automatica , la logica va a estar en el html, campos, etc

y los formualarios reactivo, procura que sean lo mas basicos posibles
y que todo el trabajo pesado este en el componente de typescript ts

recomienda utilizar formularios reactivos porque se tiene mas control al respecto

pero cuando los formulario son sencillos por ejemplo manejar un input
el formulario por template esta bien

se arranca por basicos

basicos.component.html

en la doc se ve como hacer un form control

la clase mb-3 una distancia del cuadro del input seria
la clase col-sm-3 usar el espacio disponible
en la div de sm 9, ocupa el resto del espacion

por que bootstrap trabaja con row de 12 columnas, 9+3 12
seria todo el espacio pra el template basico serian 12 columnas

https://getbootstrap.com/docs/5.2/forms/form-control/

con la clase de bootstrap float-end lo manda a la derecha 

el refresco de la pantalla al darle en guardar esta hecho de la forma tadicionarl
del post
pero angular nos permite tomar los datos directamente sin refrescar y no perder
la info, ademas de hacer de una las validaciones

pueden aparecer warning en amarrillo porque no encuentra las clases 
y puede ser porque estoy llamando a bootstrap desde cnd con el link
y por eso no encuentra las clases
para sacarlo se podria hacer desactivando la html suport de las 
aplicaciones instaladas en el visual code

_____________________________

para la aproximacion por template tenemos que importar el formModule
como lo vamos a usar nomas para el template module , lo ponemos ahi nomas
si lo quisieramos usar de forma general lo hariamos desde el app.module

al precionar el guardar, sigue haciendo el refresco, eso es porque todavia
no esta siendo parte del bundle, pero deberia ya serlo, asi que reiniciamos el
ng serve, 
esto hace que se lediga a angular que tome el control del formulario

se agrega al form basicos html
el ngsubmit con el metodo guardar definido en basicos ts

como estamos haciendo por template el submit se hace desde el html

se crea la propiedad #miFormulario como referencia local, en el formulario y se le dice que va a ser dle tipo
ngForm, enlaza la referencia ngForm a la variable #miFormulario que se esta creando
y en el metodo guardar se lo manda con la propiedad al formulario

y al hacer el console log se puede ver por consola las propiedades del usuario
la propiedad pristine en true signifca que el formulario no fue manipulado
desde que se le presento al usuario
touched en false, significa que no se ha tocado el formulario
y tiene varias cosas mas 

guardar(miFormulario.value)

al tipo para completar en guardar y no dejarlo como any, lo podemos ver en la consola
al hacerle el .log de lo que le enviamos como parametro desde el html
y de esa forma tengo acceso a todas las propiedades y metodos

para decirle a angular que los input del html son parte del formulario
hay que agregarle el ngModel y un name que puede ser cualquiera para identificar 
al campo

ahora si escribo algo en el campo y le doy en guardar por consola voy a ver el valor 

para que no se tenga que ver los valores tocando el boton guardar, se crea un 
div para Valid
miFormulario.valid me dice si es true o flase

para que el formulario no de autosugerencias que es propio del html
se pone la propiedad del formulario en autocomplete="off"


y podemos ver en el Valid que tenemos acceso a todos los campos del formulario facilmente
veo que cambian 

los name tienen que ser unicos del formulario no pueden ser duplicados

por el type que ponga en el input, va a ser tratado por java script a partir por ese 
tipo y lo vemos en el Valid como se imprime, con o sin comillas

vemos que siempre el valid esta en true,
hay que controlar eso y se hace por el html porque es aproximacion por template
y solamente tendria que poner required en las propiedaes del input para que se 
determine si es false o true

pero para validaciones mas complejas por ejemplo que un valor no puede ser negativo
requiere mas trabajo hacerlo por aproximacion por template

_______________________

TEMPLATE MOSTRAR MENSAJES DE ERROR

se agregan para ver propiedades pristine, touched

pristine es que no se han modificado las valores del formulario desde que se ha presentado
al usuario

el touch es cuando se toca algun campo

una validacion que se puede hacer que es propia de html es el minlength=3
no se pasa a true hasta que tenga al menos 3 valores

para mostrar el mensaje de alerta que debe ser de 3 letras cuando sea necesario se puede 
utilizar el ngIF

para ver el estado de las validaciones, se puede entrar en controls-producto-errors
si sla en null no hay errores, la propiedad del fomulario

los formularios por template se crean cuando son renderizados

y hasta que llega al span Debe de ser de 3 letras todavia no se crea nada
por eso con controls.producto.invalid da error por eso no se ve el producto

por eso se le agrega al producto el ?
y la otro validacion seria preguntar si fue tocado el formulario

*ngIf="miFormulario.controls.producto.invalid &&
                                miFormulario.controls.producto.touched"

_____________________________

VIEWCHILD

hacer esa validacion tantas veces es un viaje por eso se hace un metodo para eso
ahora hay uqe acceder a la referencia al formulario desde el ts

podemos usar el decorador Input para recibir el elemento que viene del elemento
padre 

despues esta el output para emitir un elemento

y tenemos tambien 
el decorador @ViewChild() y le pasamos como parametro lo que queremos buscar
si quiero algo que esta haciendo referencia local como el formulario, lo llamamos
con el decorador

si marca error por que la propiedad NgForm no se inicializo se le coloca el !
indicando que siempre va a tener un valor
y en el metodo guardar no va hacer falta mandarle el formulario


ahora esa validacion se va hacer desde el ts o sea una funicion para preguntarle al formulario sobre el valid
y en el ngIf llamamos al funcion nombreValido

puede dar error porque todavia el formulario no se renderizo
asi que se pregunta por el formulario si esta agregandole el ?

_________________________

TEMPLATE VALIDAR NUMERO IGUAL MAYOR A 0

hacer lo mismo que el anterior pero para el campo precio

no dejar hacer el submit si no estan los datos cargados
si no es valido el formulario se desabilita el boton seria
[disabled] = "miFormulario.invalid"

de esta forma se habilita el boton guardar cuando
el campo producto y precio son validos

_____________________________

DIRECTIVAS PERSONALIZADAS
CUSTOMNIN 

hacer una validacion automatica, que valide que el valor del campo Precio
si es menor a a 0, que al hacer el click en guardar no se envie el post
esto esta complicado por aprox por template
hay que usar direcctivas especializadas
en formularios reactive no hacen falta

se crea la directiva, creando un archivo
custom-min.directive.ts en la carpeta directives, se hace manualemnte
el .directive.ts no le dice a angular que es una directiva, nomas a nosostros

lo que le dice a angular que es una directiva es la clase CustomDirective
se agrega arriba el @Directive()

las directivas necesitan un selector , es decir como lo vamos a utilizar
en basicos.component.html en existentes

se le dice al selector como va a ser la formo para utilizar la directiva especializada
se le agrega la directiva especializada customMin y de esta forma se puede extender el comportameinto
del input y hacer la validaciones que quiera
cuando pase por el customMin se va a ejecutar el custom.min.directive.ts
y se usa la propiedad [minimo]

en el custom.min.directive.ts se define el selector para decirle a que se le va a aplicar la directiva especializada
y tambien el selector tiene que tner el ngModel
'[customMin][ngModel]'

ahora se  necesita recibir el minimo = 0 desde la directiva
usando la directiva input para poderlo recibir del padre

a diferencia que los servicios, que estan proveidos en el root, las directivas no estan proveidas
hay que incluirlas en el module correspondiente, que seria en este caso en el template module, hay que declararla ahi

para que la directiva implemente algo, por eso muestra en la consola undefined
asi que hay que implementar el validator en la directiva personalizada
es un obj de angular para hacer este tipo de validaciones
como el required, el min length, etc, esoes el validator propiamente

el control hay que pasarlo por parametor a la funcion de validate, el control seria el formControl

luego en la directiva @Directive, tambien hay que especificar que servicio necesito inyectar
que es el NG_VALIDATORS
y el useExisting que es el nombre de la clase CustomMinDirective
y el multi en true

y se tendira acceso al minimo 

tambien re tendria que agregar la propiedad requiered para que no lo deje postear si no esta cargado ese campo
y se habilita el boton cuando se a un valor valido para el campo existencias

que devuelva un null significa que no hay error 

Y EL POSTEO LO HACE MOSTRANDO LO QUE SE ENVIAR
PERO AHI YA ENTRA LO QUE ES LE BACKEND

para resetar el formulario luego de dar en guardar
this.miFormulario.resetForm();
pone a pristine en true y el touched en false
y eso indica uqe no se modifico el formulario luego del posteo
pristine en true significa que no se modifico el formulario desde el momento que se presento
el formulario 

___________________________

TEMPLATE LIMPIAR EL FORMULARIO y hacer que una vez que se postea queden valores por defecto 
en e formulario

se agrega una propiedad en basicos ts
para tener los valores que van a ser por defecto 

se tiene que usar el ngModel para asignarle valores en el campo correspondiente
[ngModel]

__________________

template formularios dinamicos y arreglos

la clase col-sm-3 col-form-label de bootstrap me ayuda a que sea responsive

class="col-sm-12" para que tome todo el espacio de una 

se tiene que mostrar el mensaje en rojo si no hay nada ingresado en el campo nombre de persona
y ademas que quede inhabilitado el boton si no hay nada en ese campo requerido

primero hacer referencia local al formulario en dinamicos.comopnente.html
#miFormulario="ngForm"
ahora para poder asociarlo necesito las propiedades 
name
ngModel
required

y se agrega en la condiciones el touched si se toca y no se pone nada que salga el alerta 
en el span

se quiere agregar un campo tipo input group
button addons en bootstrap

___________________

14.AGREGAR ELEMENTOS DE FORMA DINAMICA

en el dinamicos.components
se crean las interfaces persona y favorito

se crea un obj inicializar persona

par aasignarle un valor al campo nombre
uso na propiedad ngModel entre [] [ngModel]

para que lea los valores de favoritos y agregue un campo para cada uno 
se hace un ngfor
se le asigna al ngModel
pero en name hay que usar interpolacion de string para colocar la posicion
indice del mismo y tengan difererntes nombres los name para los campos

name= "favorito_{{i}}"

para ver que cuando se cambie los valores de favoritos
se cambien la lista agrega un span para ver esos elementos mejor por pantalla
para verlos tengo que asociarlos y emitir sus valores

se agrega el required para los campos de favoritos asi se desabilita 
el boton guardar para el caso en que no tenga nada 

se le agrega el  () para emitir al ngModel para que cambie a medida que se cambia 
los valores de los campos

_______________

VIDEO 15 ELIMINAR ELEMENTO CREADO DE FORMA DINAMICA

para agregar un boton en cada campo del favorito para eliminarlo
se utiliza el group

________________________

video 16 agregar juegos favoritos

en el boton agregar favorito
se agrega para emitir nuevoJuego
[(ngModel)]="nuevoJuego"


para ejecutar el metodo agregar juego cuando se presione enter
se agrega como propiedas el (keyup.enter)

________________________________

17 - template radio, check y switches

en sidemenu component se agrega style 
li{
    cursor: pointer;
}
para ver la manito en los que son enlaces

se realiza este ejercicio en el switches
se busca en el bootstrap check an radios

https://getbootstrap.com/docs/5.2/forms/checks-radios/#checks

se define el formulario y se lo asigna localmente #miFormulario="ngForm"

se crea el contendedor para el radio
como defino un row lo que viene es columna

el id y el for es para que al hacerle click a la palabra tambien lo tome 
lo importante de los radios es que el name sea igual radioGenero en el for
el for y dario debe ser el mismo para un input

se quita la propiedad check  que se tilda una por defecto
el check se va a manejar por angular

se hace para un switch

en ralidad estos switch de bootstrap son iguales a los check pero por las clases de bootstrap 
nomas se ven diferentes

copio y pego

agrega otr check

la idea es que este tildado el Terminos y condiciones para que se pueda hacer algo 

y se agrega un boton

ahora con haberle colocado la referncia #miFormulario="ngForm"
angular ya tiene el control al formulario

falta del ngModel para los campos

____________________________

18- TEMPLATE VALIDANDO RADIOS, CHECKS Y SWITCHES

para obligar a la persona a seleccionar algo antes del post del boton guardar 

se define en switches component ts, un obj persona valor en genero F
para que reconosca que el F es de femenino

se agrega el value en los input

hay que agregar en el input la propiedad caja de banandas para que emita el valor

[(ngModel)] = "persona.genero"

y por defecto se va a ver que femenino esta seleccionado en el check

se coloca span para ver en tiempo real los valores por pantalla

y se ve el vamor de radio genero  que va cambiando

al agregarle el required en los input
sale que el formulario no es valido

y tambien para que no se habilite el boton si el formulario no es valido

para que el switch quede alineado 
form-check form-switch mt-2

para que en notifiaciones se emita y escuche valores 
[(ngModel)]="persona.notifiaciones"
hay que agregarle el name "notificaciones"

se puede dejarlo al atributo en true desde el ts switch component

se agrega la condicion terminosYCondiciones y por defecto se la deja en false

se agrega el name terminosYcondiciones 
y para el campo se coloca el name 


______________________

FORMULARIOS REACTIVOS
LA LOGICA ESTA EN EL TYPE SCRIPT Y ESTA MAS FACIL PARA HACER LOS GETTERS Y MOSTRAR MENSAJES 
DE VALIDACIONES POR PANTALLA

copia y todo lo de basicos component de template y lo pega en el de reactive
y se va sacandolo tenga error

lo mismo para dinamicos y switches

__________________


PRIMEROS PASOS EN FORMULARIO REACTIVOS

en basicos html y ts
la idea es que con los formularios reactivos, el html este lo mas simple posible

para integrar los formulario reactivos en el modulo, hay que importarlo en ese modulo
en reactive module
y en los import se importa el ReactiveFormsModule

si no vamos a usar el ngmodel FormsModule, no se importa
y solo se usa formularios reactivos

lo recomendado es usar uno solo de los 2, un solo tipo de formulario por modulo
el de aproximacion por templete , angular hace todo el formulario por mi

con reactive forms hay que indicador todo, este es el formulario, tiene esta aparciencia, estos
son los controles, etc

se define en el ts el FormGroup
con los controrls que son los campos

y en el html se le asocia el formulario

hay que indicar el input que responde al control
con el  formControlName y se le asigna el nombre del ts del formulario

pristine en true cuando no se cambio el valor por defecto de formulario

__________________

se agregan los campos de el formgroup del formulario
se le pone algunos valores por defecto si se quiere
y se le indica a que campo del html hace referencia
en el input con el form-control se hace referencia
se agrega formControlName en los input y entre comillas se agrega el nombre del campo
en formgroup del ts

FORMBUILDER es para crear formularios bastantes complejos, porque si tengo muchos campos
tendria que agregar varios formControl en el formGroup
nos ayuda a no tener que usar el new por que es redundante

el formbuilder es un servicio y hay que inyectarlo en el contructor
se deja comnetada lo hecho anterior para los campos
y se crea otro usando el constructor
y se ponen los campos como arreglos

y de esta forma es mas claro a la vista

_________________

VALIDACIONES BASICAS . FORMS VALIDATOR

validaros sincronos, validadores que se ejecutan cuando el usuario esta tocando una tecla
es como disptara funciones de java script

el validor se puede ejecutar a destiempo o en otro hilo de tiempo para validar algo y luego
regresar para saber si es valido o no

para ejecutar un validadro sincrono, ejecuto un validador requiere se lo hace
escribiendo Validators.required y ver que si no tiene valor se ve en el print de la pantalla
valid en false
si se ponen una segunda coma para el 3er parametro ahi estamos definiendo un validadro asincrono

asi que si quiero varios validadeores sincronoes los tengo que poner entre corchetes

y luego se agrega el disabled si es invalido
en el boton de guardar 


______________

mostrar mensajes de error

para que no aparesca el mensaje de error cuando es correcto

hay que usar el ngIf en los span para mostrar los mensajes de error

al hacer el miFormulario.controls.nombre.errors para preguntar si tiene errores
y no hace falta hacer validacion con el ? porque el formulario se creo antes que 
preguntar por validaciones y tambien se le agrega la validacion por touch

esto es parecido a la validaciones por template en el html para mostrar mensajes de error
pero por reactivos tenemos algo adicional, hacer una funcion para validar
para evaluar si el campo es valido o no 

se puede hacer una funcio general para todos los campos, ya que es un objeto formGroup
en la funcion se pregunta por si tiene errores ese campo o si se toco y devuelve un true o false

y se manda comp parametro el input que sea
y se llama esa funcion, desde el html pasando el nombre del campo
ya tendria las validaciones en los campos
realmente no es que este chocando con la validacion minima , primero hace el required primero
y luego con el valor que se esta ingresando

se lo ve agregando al final para ver lo que pasa en el html con el precio
mostrando el error por eso muestra null ne precio json del html, porque no hay errores

____________________

SUBMIT DEL FORMULARIO

se quita la validacion del boton por que era de demostracion

como es del tipo submit al hacer click se dispara el submit
se agrega el evento ngSubmit en el formulario

para mostrar el mensaje de error es que se cumplan las 2 condiciones del metodo campoEsValido
que no tenga errores y que sea tocado

se quiere hacer que cuando se haga click en guardar y no haya campos se deberia mostrar los mensajes de error
tambien

se agrega la funcionalidad que se fuerze el tocado de los campos aunque no se hayan tocado y pero se preciono
en guardar, para que salga el mensaje de error ya que los campos estaria como tocados y ademas estan los
errores de no estar con valores validos

y cuando hay algun error se quiere que se limpien todos los campos
con this.miFormulario.reset();

si queremos inicializar el formulario con algun valor
se implementa el ngOnInit basicos.component.ts

debajo del constructor se agrega el ngOnInit
y se dice miFormulario.SerValue

el problema es que tienen que esta todos los datos del formulario definido en el group
y por ejemplo un id que se puede no tener momentaneamente, va a rebentar

con el reset no hace falta indicar todos los campos, nomas los que quiero
los vuelve a los valores por defecto que quiera
this.miFormulario.reset(){
	nombre: 'RTX 4080ti',
	precio:1600
}

por eso prefiere usar el reset para establecer valores al formulario porddefcto
porque no hace falta indicar todos los campos con valores definidos en el formGroup




